Only a few days until flexi week!

This week we will be looking at balancing BSTs, AVL trees and introducing graphs!
AVL Trees may be useful for those trying to optimise their solutions
for the assignment, and graphs will be used in this
week's lab, where you make your own budget Facebook!

Admin:
    - There is handmarking to be done for
        lab03, lab04 AND lab05
    - Assignment 1 is due 8pm Monday of week 7.
        This is the last tutorial before it's due, so
        make sure to ask all your questions today, or post them on the forum :)
        I will have a mini Q&A session today






AVL Trees:
    - AVL Trees are like a smart BST, because they can
        rebalance themselves so that they will be height-balanced
        after every insertion/deletion!
    - This allows for O(log n) insertion and search




Graphs:
    - Graphs are a another new data type!
    - Graphs consist of vertices (nodes) and edges
        which connect the vertices
    - They are a more general version of trees, and
        can be used to represent any sort of relationship between things
    - e.g. Facebook, Google Maps, Structure of atoms in molecules

    - There are some important properties we can consider:
        - directed vs undirected
        - weighted vs unweighted

    - There are three implementations of graphs in C:
        - Adjacency matrix
        - Adjacency list
        - Array of edges



Assignment 1 Tips / Q&A:
    - About the tasks:
        - Get task 1 done first, it is by far the easiest task, and it will
            help you wrap your head around the structure of Huffman trees

        - The rest of the tasks are all roughly the same difficulty.
            Task 2 must be done before task 3, but you can complete task 4 at anytime!

    - Remember to label your helper functions as "static"
