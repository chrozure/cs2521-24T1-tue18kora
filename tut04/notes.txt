We are over 1/3 done with the course!

This week we will be looking at ADTs and BSTs.
These stand for: Abstract Data Types and Binary Search Trees


Admin:
    - You can get the handmarking for lab03 done
        this week or next week
    - There is some handmarking for this week's lab, but it is only worth 1/5.
    - Assignment 1 has been released! I think it is a
        super interesting assignment, and I'll try talk a bit about it if I have time (1% chance)







ADTs:
    - An Abstract Data Type is a type of data type
        where you are given an interface that describes
        how to use it, but you do not need to know
        how it is implemented "underneath the hood".

    - Why is this useful?
        - It allows you to think about problems at a "higher level"
        - It helps split up work into smaller chunks


BSTs:
    - Binary Search Trees are a new data type!
    - They aim to solve the problems that arrays
        and linked lists have:
        - Arrays are not dynamic - you can't change their size
        - Linked lists do not have random access - so you can't perform binary search


Assignment 1:
    - In this assignment, you will code up your own Huffman encoder/decoder
    - These are used to make compression codes, and you may study about them later!
    - To make this Huffman encoder, you will be using two different types of trees:
        - Binary search trees
        - Huffman trees
